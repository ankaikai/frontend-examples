{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\Projects\\\\01-first-proj\\\\react-proj-1\\\\src\\\\components\\\\Profile\\\\MyPosts\\\\MyPosts.jsx\";\nimport React from 'react';\nimport classes from './MyPosts.module.scss';\nimport Post from './Post/Post.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyPosts = props => {\n  let postElements = // map'им данные по постам из state и отрисовываем в виде нового поста\n  props.postsData.map(post => /*#__PURE__*/_jsxDEV(Post, {\n    name: post.name,\n    message: post.message,\n    likes: post.likes,\n    dislikes: post.dislikes\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 34\n  }, this));\n  let newPostElement = /*#__PURE__*/React.createRef(); // Создаем ref и указываем в textarea\n\n  let addPost = () => {\n    // создаем функцию и прокидываем ее в button              \n    let post = newPostElement.current.value; // берем текущее значение из textarea\n\n    props.addPosts(post); // добавляем пост к данным в state\n\n    props.updateTextArea(''); // обнуляем textarea после нажатия кнопки\n  };\n\n  let onChangePost = () => {\n    // Добавляет из state значение textarea, отправленное в state \n    let text = newPostElement.current.value; // Записываем text area в переменную\n\n    props.updateTextArea(text); // Добавляем значение в функцию из state, которая добавляет в \n  };\n\n  return (\n    /*#__PURE__*/\n    // возвращается наша разметка\n    _jsxDEV(\"div\", {\n      className: classes.content,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        ref: newPostElement,\n        className: classes.textArea,\n        updateTextArea: props.updateTextArea,\n        onChange: onChangePost,\n        value: props.newPostText,\n        cols: \"80\",\n        rows: \"3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.postButtons,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addPost,\n          className: classes.addPost + ' ' + classes.btn,\n          children: \"Add New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }, this), \"   \", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.removePost + ' ' + classes.btn,\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this), postElements]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_c = MyPosts;\nexport default MyPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyPosts\");","map":{"version":3,"names":["React","classes","Post","MyPosts","props","postElements","postsData","map","post","name","message","likes","dislikes","newPostElement","createRef","addPost","current","value","addPosts","updateTextArea","onChangePost","text","content","textArea","newPostText","postButtons","btn","removePost"],"sources":["D:/React/Projects/01-first-proj/react-proj-1/src/components/Profile/MyPosts/MyPosts.jsx"],"sourcesContent":["import React from 'react';\r\nimport classes from './MyPosts.module.scss';\r\nimport Post from './Post/Post.jsx';\r\n\r\nconst MyPosts = (props) => {\r\n\r\n  let postElements =    // map'им данные по постам из state и отрисовываем в виде нового поста\r\n    props.postsData.map(post => (<Post name={post.name} message={post.message} likes={post.likes} dislikes={post.dislikes} />));\r\n\r\n    let newPostElement = React.createRef();       // Создаем ref и указываем в textarea\r\n    let addPost = () => { // создаем функцию и прокидываем ее в button              \r\n      let post = newPostElement.current.value;  // берем текущее значение из textarea\r\n      props.addPosts(post);      // добавляем пост к данным в state\r\n      props.updateTextArea(''); // обнуляем textarea после нажатия кнопки\r\n    }\r\n    let onChangePost = () => {   // Добавляет из state значение textarea, отправленное в state \r\n      let text = newPostElement.current.value; // Записываем text area в переменную\r\n      props.updateTextArea(text) // Добавляем значение в функцию из state, которая добавляет в \r\n      \r\n    }\r\n\r\n  return (  // возвращается наша разметка\r\n    <div className={classes.content}>\r\n      <textarea ref = {newPostElement} className={classes.textArea} updateTextArea={props.updateTextArea} onChange={onChangePost} value={props.newPostText} cols=\"80\" rows=\"3\"></textarea> {/* textarea для добавления нового поста, указываем ref */}\r\n      <div className={classes.postButtons}>   \r\n        <button onClick={addPost} className={classes.addPost + ' ' + classes.btn}>Add New</button>   {/* в кнопке callback добавления нового поста */}\r\n        <button className={classes.removePost + ' ' + classes.btn}>Remove</button>\r\n      </div>\r\n      <hr />\r\n      {postElements}\r\n    </div>\r\n  );\r\n}\r\nexport default MyPosts;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;EAEzB,IAAIC,YAAY,GAAM;EACpBD,KAAK,CAACE,SAAN,CAAgBC,GAAhB,CAAoBC,IAAI,iBAAK,QAAC,IAAD;IAAM,IAAI,EAAEA,IAAI,CAACC,IAAjB;IAAuB,OAAO,EAAED,IAAI,CAACE,OAArC;IAA8C,KAAK,EAAEF,IAAI,CAACG,KAA1D;IAAiE,QAAQ,EAAEH,IAAI,CAACI;EAAhF;IAAA;IAAA;IAAA;EAAA,QAA7B,CADF;EAGE,IAAIC,cAAc,gBAAGb,KAAK,CAACc,SAAN,EAArB,CALuB,CAKuB;;EAC9C,IAAIC,OAAO,GAAG,MAAM;IAAE;IACpB,IAAIP,IAAI,GAAGK,cAAc,CAACG,OAAf,CAAuBC,KAAlC,CADkB,CACwB;;IAC1Cb,KAAK,CAACc,QAAN,CAAeV,IAAf,EAFkB,CAES;;IAC3BJ,KAAK,CAACe,cAAN,CAAqB,EAArB,EAHkB,CAGQ;EAC3B,CAJD;;EAKA,IAAIC,YAAY,GAAG,MAAM;IAAI;IAC3B,IAAIC,IAAI,GAAGR,cAAc,CAACG,OAAf,CAAuBC,KAAlC,CADuB,CACkB;;IACzCb,KAAK,CAACe,cAAN,CAAqBE,IAArB,EAFuB,CAEI;EAE5B,CAJD;;EAMF;IAAA;IAAU;IACR;MAAK,SAAS,EAAEpB,OAAO,CAACqB,OAAxB;MAAA,wBACE;QAAU,GAAG,EAAIT,cAAjB;QAAiC,SAAS,EAAEZ,OAAO,CAACsB,QAApD;QAA8D,cAAc,EAAEnB,KAAK,CAACe,cAApF;QAAoG,QAAQ,EAAEC,YAA9G;QAA4H,KAAK,EAAEhB,KAAK,CAACoB,WAAzI;QAAsJ,IAAI,EAAC,IAA3J;QAAgK,IAAI,EAAC;MAArK;QAAA;QAAA;QAAA;MAAA,QADF,oBAEE;QAAK,SAAS,EAAEvB,OAAO,CAACwB,WAAxB;QAAA,wBACE;UAAQ,OAAO,EAAEV,OAAjB;UAA0B,SAAS,EAAEd,OAAO,CAACc,OAAR,GAAkB,GAAlB,GAAwBd,OAAO,CAACyB,GAArE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,sBAEE;UAAQ,SAAS,EAAEzB,OAAO,CAAC0B,UAAR,GAAqB,GAArB,GAA2B1B,OAAO,CAACyB,GAAtD;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAME;QAAA;QAAA;QAAA;MAAA,QANF,EAOGrB,YAPH;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;AAWD,CA5BD;;KAAMF,O;AA6BN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}