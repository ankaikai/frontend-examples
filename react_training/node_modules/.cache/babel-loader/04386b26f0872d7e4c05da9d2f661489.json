{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\Projects\\\\01-first-proj\\\\react-proj-1\\\\src\\\\components\\\\Profile\\\\MyPosts\\\\MyPosts.jsx\";\nimport React from 'react';\nimport classes from './MyPosts.module.scss';\nimport Post from './Post/Post.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyPosts = props => {\n  let postElements = // map'им данные по постам из state и отрисовываем в виде нового поста\n  props.postsData.map(post => /*#__PURE__*/_jsxDEV(Post, {\n    name: post.name,\n    message: post.message,\n    likes: post.likes,\n    dislikes: post.dislikes\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 34\n  }, this));\n  return (\n    /*#__PURE__*/\n    // возвращается наша разметка\n    _jsxDEV(\"div\", {\n      className: classes.content,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        ref: newPostElement,\n        className: classes.textArea,\n        cols: \"80\",\n        rows: \"3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.postButtons,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addPost,\n          className: classes.addPost + ' ' + classes.btn,\n          children: \"Add New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 9\n        }, this), \"   \", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.removePost + ' ' + classes.btn,\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }, this), postElements]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_c = MyPosts;\nexport default MyPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyPosts\");","map":{"version":3,"names":["React","classes","Post","MyPosts","props","postElements","postsData","map","post","name","message","likes","dislikes","content","newPostElement","textArea","postButtons","addPost","btn","removePost"],"sources":["D:/React/Projects/01-first-proj/react-proj-1/src/components/Profile/MyPosts/MyPosts.jsx"],"sourcesContent":["import React from 'react';\r\nimport classes from './MyPosts.module.scss';\r\nimport Post from './Post/Post.jsx'\r\n\r\nconst MyPosts = (props) => {\r\n\r\n  let postElements =    // map'им данные по постам из state и отрисовываем в виде нового поста\r\n    props.postsData.map(post => (<Post name={post.name} message={post.message} likes={post.likes} dislikes={post.dislikes} />));\r\n\r\n  return (  // возвращается наша разметка\r\n    <div className={classes.content}>\r\n      <textarea ref = {newPostElement} className={classes.textArea} cols=\"80\" rows=\"3\"></textarea> {/* textarea для добавления нового поста, указываем ref */}\r\n      <div className={classes.postButtons}>   \r\n        <button onClick={addPost} className={classes.addPost + ' ' + classes.btn}>Add New</button>   {/* в кнопке callback добавления нового поста */}\r\n        <button className={classes.removePost + ' ' + classes.btn}>Remove</button>\r\n      </div>\r\n      <hr />\r\n      {postElements}\r\n    </div>\r\n  );\r\n}\r\nexport default MyPosts;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;EAEzB,IAAIC,YAAY,GAAM;EACpBD,KAAK,CAACE,SAAN,CAAgBC,GAAhB,CAAoBC,IAAI,iBAAK,QAAC,IAAD;IAAM,IAAI,EAAEA,IAAI,CAACC,IAAjB;IAAuB,OAAO,EAAED,IAAI,CAACE,OAArC;IAA8C,KAAK,EAAEF,IAAI,CAACG,KAA1D;IAAiE,QAAQ,EAAEH,IAAI,CAACI;EAAhF;IAAA;IAAA;IAAA;EAAA,QAA7B,CADF;EAGA;IAAA;IAAU;IACR;MAAK,SAAS,EAAEX,OAAO,CAACY,OAAxB;MAAA,wBACE;QAAU,GAAG,EAAIC,cAAjB;QAAiC,SAAS,EAAEb,OAAO,CAACc,QAApD;QAA8D,IAAI,EAAC,IAAnE;QAAwE,IAAI,EAAC;MAA7E;QAAA;QAAA;QAAA;MAAA,QADF,oBAEE;QAAK,SAAS,EAAEd,OAAO,CAACe,WAAxB;QAAA,wBACE;UAAQ,OAAO,EAAEC,OAAjB;UAA0B,SAAS,EAAEhB,OAAO,CAACgB,OAAR,GAAkB,GAAlB,GAAwBhB,OAAO,CAACiB,GAArE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,sBAEE;UAAQ,SAAS,EAAEjB,OAAO,CAACkB,UAAR,GAAqB,GAArB,GAA2BlB,OAAO,CAACiB,GAAtD;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAME;QAAA;QAAA;QAAA;MAAA,QANF,EAOGb,YAPH;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;AAWD,CAhBD;;KAAMF,O;AAiBN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}