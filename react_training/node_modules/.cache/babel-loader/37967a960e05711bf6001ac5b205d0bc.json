{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\Projects\\\\01-first-proj\\\\react-proj-1\\\\src\\\\components\\\\Profile\\\\MyPosts\\\\MyPosts.jsx\";\nimport React from 'react';\nimport classes from './MyPosts.module.scss';\nimport Post from './Post/Post.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyPosts = props => {\n  let newPostElement = /*#__PURE__*/React.createRef(); // Создаем ref указываем в textarea\n\n  let addPost = () => {\n    // создаем функцию и прокидываем ее в button\n    let post = newPostElement.current.value; // берем текущее значение из textarea\n\n    props.addPost(post); // добавляем пост к данным в state\n  };\n\n  let postElements = // map'им данные по постам из state и отрисовываем в виде нового поста\n  props.postsData.map(post => /*#__PURE__*/_jsxDEV(Post, {\n    name: post.name,\n    message: post.message,\n    likes: post.likes,\n    dislikes: post.dislikes\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 34\n  }, this));\n  return (\n    /*#__PURE__*/\n    // возвращается наша разметка\n    _jsxDEV(\"div\", {\n      className: classes.content,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        ref: newPostElement,\n        className: classes.textArea,\n        cols: \"80\",\n        rows: \"3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.postButtons,\n        children: [\"   \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addPost,\n          className: classes.addPost + ' ' + classes.btn,\n          children: \"Add New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.removePost + ' ' + classes.btn,\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this), postElements]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_c = MyPosts;\nexport default MyPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyPosts\");","map":{"version":3,"names":["React","classes","Post","MyPosts","props","newPostElement","createRef","addPost","post","current","value","postElements","postsData","map","name","message","likes","dislikes","content","textArea","postButtons","btn","removePost"],"sources":["D:/React/Projects/01-first-proj/react-proj-1/src/components/Profile/MyPosts/MyPosts.jsx"],"sourcesContent":["import React from 'react';\r\nimport classes from './MyPosts.module.scss';\r\nimport Post from './Post/Post.jsx'\r\n\r\nconst MyPosts = (props) => {\r\n\r\nlet newPostElement = React.createRef();       // Создаем ref указываем в textarea\r\n  let addPost = () => {                      // создаем функцию и прокидываем ее в button\r\n    let post = newPostElement.current.value;  // берем текущее значение из textarea\r\n    props.addPost(post);      // добавляем пост к данным в state\r\n  }\r\n\r\n  let postElements =    // map'им данные по постам из state и отрисовываем в виде нового поста\r\n    props.postsData.map(post => (<Post name={post.name} message={post.message} likes={post.likes} dislikes={post.dislikes} />));\r\n\r\n  return (  // возвращается наша разметка\r\n    <div className={classes.content}>\r\n      <textarea ref = {newPostElement} className={classes.textArea} cols=\"80\" rows=\"3\"></textarea> {/* textarea для добавления нового поста */}\r\n      <div className={classes.postButtons}>   {/*  */}\r\n        <button onClick={addPost} className={classes.addPost + ' ' + classes.btn}>Add New</button>\r\n        <button className={classes.removePost + ' ' + classes.btn}>Remove</button>\r\n      </div>\r\n      <hr />\r\n      {postElements}\r\n    </div>\r\n  );\r\n}\r\nexport default MyPosts;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;EAE3B,IAAIC,cAAc,gBAAGL,KAAK,CAACM,SAAN,EAArB,CAF2B,CAEmB;;EAC5C,IAAIC,OAAO,GAAG,MAAM;IAAuB;IACzC,IAAIC,IAAI,GAAGH,cAAc,CAACI,OAAf,CAAuBC,KAAlC,CADkB,CACwB;;IAC1CN,KAAK,CAACG,OAAN,CAAcC,IAAd,EAFkB,CAEQ;EAC3B,CAHD;;EAKA,IAAIG,YAAY,GAAM;EACpBP,KAAK,CAACQ,SAAN,CAAgBC,GAAhB,CAAoBL,IAAI,iBAAK,QAAC,IAAD;IAAM,IAAI,EAAEA,IAAI,CAACM,IAAjB;IAAuB,OAAO,EAAEN,IAAI,CAACO,OAArC;IAA8C,KAAK,EAAEP,IAAI,CAACQ,KAA1D;IAAiE,QAAQ,EAAER,IAAI,CAACS;EAAhF;IAAA;IAAA;IAAA;EAAA,QAA7B,CADF;EAGA;IAAA;IAAU;IACR;MAAK,SAAS,EAAEhB,OAAO,CAACiB,OAAxB;MAAA,wBACE;QAAU,GAAG,EAAIb,cAAjB;QAAiC,SAAS,EAAEJ,OAAO,CAACkB,QAApD;QAA8D,IAAI,EAAC,IAAnE;QAAwE,IAAI,EAAC;MAA7E;QAAA;QAAA;QAAA;MAAA,QADF,oBAEE;QAAK,SAAS,EAAElB,OAAO,CAACmB,WAAxB;QAAA,+BACE;UAAQ,OAAO,EAAEb,OAAjB;UAA0B,SAAS,EAAEN,OAAO,CAACM,OAAR,GAAkB,GAAlB,GAAwBN,OAAO,CAACoB,GAArE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAQ,SAAS,EAAEpB,OAAO,CAACqB,UAAR,GAAqB,GAArB,GAA2BrB,OAAO,CAACoB,GAAtD;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAME;QAAA;QAAA;QAAA;MAAA,QANF,EAOGV,YAPH;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;AAWD,CAtBD;;KAAMR,O;AAuBN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}